<html>
<head>
    <title>Mouse Event Tracking</title>
    <script type="text/javascript">
        var canvas, context, canX, canY, mouseIsDown = 0;
        var startX = null, startY = null;

        function init() {
            canvas = document.getElementById("myCanvas");
            context = canvas.getContext("2d");
            canvas.addEventListener("mousedown", mouseDown, false);
            canvas.addEventListener("mousemove", mouseXY, false);
            canvas.addEventListener("mouseup", mouseUp, false);
        }

        function mouseUp() {
            mouseIsDown = 0;
            mouseXY();
        }

        function mouseDown(e) {
            mouseIsDown = 1;
            mouseXY(e);
            startX = canX;
            startY = canY;
        }

        function mouseXY(e) {
            if (!e) e = event;
            var rect = canvas.getBoundingClientRect();
            canX = e.clientX - rect.left;
            canY = e.clientY - rect.top;
            showPos();
        }

        function showPos() {
            context.clearRect(0, 0, canvas.width, canvas.height);

            // 출력 문자열 구성
            var str = "";
            if (startX !== null && startY !== null) {
                str = "(" + startX + "," + startY + ") - (" + canX + "," + canY + ")";
                str += mouseIsDown ? " down" : " up";
            }

            // 중앙에 문자열 출력
            context.font = "20pt Helvetica";
            context.textAlign = "center";
            context.textBaseline = "middle";
            context.fillStyle = "black";
            context.fillText(str, canvas.width / 2, canvas.height / 2);

            // 현재 마우스 위치에 사각형
            context.fillStyle = mouseIsDown ? "red" : "green";
            context.fillRect(canX - 3, canY - 3, 6, 6);

            // 시작 지점부터 현재 지점까지 사각형 테두리 (선택사항)
            if (startX !== null && startY !== null && mouseIsDown) {
                context.strokeStyle = "blue";
                context.lineWidth = 2;
                context.strokeRect(
                    Math.min(startX, canX),
                    Math.min(startY, canY),
                    Math.abs(canX - startX),
                    Math.abs(canY - startY)
                );
            }
        }
    </script>
</head>
<body onload="init()">
    <canvas id="myCanvas" width="500" height="500" style="border:1px solid black;"></canvas>
</body>
</html>
